{"version":3,"sources":["../src/questionnaire.js"],"names":["define","$","Templates","Notification","Ajax","Str","ModalFactory","ModalEvents","responses","questionnaire","registerEvents","each","data","criterionid","value","studentcomment","privatecomment","questionnaireTable","fromUser","toUser","verbalfeedbackId","submissionId","promises","call","methodname","args","verbalfeedbackid","fromuserid","touserid","submissionid","done","result","response","options","find","selected","removeClass","addClass","html","fail","exception","prototype","click","e","preventDefault","row","parents","hasClass","forId","attr","optionRadio","removeAttr","radio","hover","console","log","studentComment","append","saveResponses","detailedRating","finalise","comment","toUserFullname","anonymous","get_strings","key","component","param","messages","showConfirmationDialogue","submitResponses","responseObjects","Object","entries","push","complete","notificationData","message","type","addNotification","window","location","redirurl","title","confirmationMessage","confirmButtonTextPromise","get_string","confirmModalPromise","create","body","large","types","SAVE_CANCEL","when","confirmButtonText","modal","setSaveButtonText","show","getRoot","on","hidden","setBody","save"],"mappings":"+qCAwBAA,OAAM,oCAAC,CAAC,QAAD,CACH,gBADG,CAEH,mBAFG,CAGH,WAHG,CAIH,UAJG,CAKH,oBALG,CAMH,mBANG,CAAD,CAOH,SAASC,CAAT,CAAYC,CAAZ,CAAuBC,CAAvB,CAAqCC,CAArC,CAA2CC,CAA3C,CAAgDC,CAAhD,CAA8DC,CAA9D,CAA2E,IAEtEC,CAAAA,CAAS,CAAG,EAF0D,CAGtEC,CAAa,CAAG,UAAW,CAC3B,KAAKC,cAAL,GAGAT,CAAC,CAAC,gCAAD,CAAD,CAAkCU,IAAlC,CAAuC,UAAW,CAC9CH,CAAS,CAACP,CAAC,CAAC,IAAD,CAAD,CAAQW,IAAR,CAAa,aAAb,CAAD,CAAT,CAAyC,CACrCC,WAAW,CAAEZ,CAAC,CAAC,IAAD,CAAD,CAAQW,IAAR,CAAa,aAAb,CADwB,CAErCE,KAAK,CAAE,IAF8B,CAGrCC,cAAc,CAAE,EAHqB,CAIrCC,cAAc,CAAE,EAJqB,CAM5C,CAPD,EASA,GAAIC,CAAAA,CAAkB,CAAGhB,CAAC,CAAC,iCAAD,CAA1B,CAEA,GAAG,IAAAgB,CAAkB,CAACL,IAAnB,CAAwB,SAAxB,CAAH,CAA+C,CAE7C,MACD,CAlB0B,GAoBvBM,CAAAA,CAAQ,CAAGD,CAAkB,CAACL,IAAnB,CAAwB,YAAxB,CApBY,CAqBvBO,CAAM,CAAGF,CAAkB,CAACL,IAAnB,CAAwB,UAAxB,CArBc,CAsBvBQ,CAAgB,CAAGH,CAAkB,CAACL,IAAnB,CAAwB,kBAAxB,CAtBI,CAuBvBS,CAAY,CAAGJ,CAAkB,CAACL,IAAnB,CAAwB,cAAxB,CAvBQ,CAyBvBU,CAAQ,CAAGlB,CAAI,CAACmB,IAAL,CAAU,CACrB,CACIC,UAAU,CAAE,kCADhB,CAEIC,IAAI,CAAE,CACFC,gBAAgB,CAAEN,CADhB,CAEFO,UAAU,CAAET,CAFV,CAGFU,QAAQ,CAAET,CAHR,CAIFU,YAAY,CAAER,CAJZ,CAFV,CADqB,CAAV,CAzBY,CAqC3BC,CAAQ,CAAC,CAAD,CAAR,CAAYQ,IAAZ,CAAiB,SAASC,CAAT,CAAiB,CAC9B9B,CAAC,CAACU,IAAF,CAAOoB,CAAM,CAACvB,SAAd,CAAyB,UAAW,CAClC,GAAIwB,CAAAA,CAAQ,CAAG,IAAf,CACExB,CAAS,CAACwB,CAAQ,CAACnB,WAAV,CAAT,aAAiDmB,CAAQ,CAACnB,WAA1D,CACAL,CAAS,CAACwB,CAAQ,CAACnB,WAAV,CAAT,OAA2CmB,CAAQ,CAAClB,KAApD,CACAN,CAAS,CAACwB,CAAQ,CAACnB,WAAV,CAAT,gBAAoDmB,CAAQ,CAACjB,cAA7D,CACAP,CAAS,CAACwB,CAAQ,CAACnB,WAAV,CAAT,gBAAoDmB,CAAQ,CAAChB,cAA7D,CAEAf,CAAC,CAAC,gCAAD,CAAD,CAAkCU,IAAlC,CAAuC,UAAW,CAC9C,GAAIV,CAAC,CAAC,IAAD,CAAD,CAAQW,IAAR,CAAa,aAAb,IAAgCoB,CAAQ,CAACnB,WAA7C,CAA0D,CACxD,GAAIoB,CAAAA,CAAO,CAAGhC,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,cAAb,CAAd,CACE,GAAID,CAAJ,CAAa,CACTA,CAAO,CAACtB,IAAR,CAAa,UAAW,CAEpB,GAAIwB,CAAAA,CAAQ,CAAGlC,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,OAAb,CAAf,CACA,GAAIC,CAAQ,CAACvB,IAAT,CAAc,OAAd,IAA2BoB,CAAQ,CAAClB,KAAxC,CAA+C,CAC3CqB,CAAQ,CAACC,WAAT,CAAqB,iBAArB,EACAD,CAAQ,CAACC,WAAT,CAAqB,YAArB,EACAD,CAAQ,CAACE,QAAT,CAAkB,eAAlB,CACH,CAJD,IAIO,IAA+B,EAA3B,GAAAF,CAAQ,CAACvB,IAAT,CAAc,OAAd,GAAoD,IAAnB,GAAAoB,CAAQ,CAAClB,KAA9C,CAA8D,CACjEqB,CAAQ,CAACC,WAAT,CAAqB,iBAArB,EACAD,CAAQ,CAACC,WAAT,CAAqB,YAArB,EACAD,CAAQ,CAACE,QAAT,CAAkB,eAAlB,CACH,CACJ,CAZD,CAaH,CACD,GAAItB,CAAAA,CAAc,CAAGd,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,sCAAb,CAArB,CACA,GAAInB,CAAc,EAAgC,EAA5B,GAAAiB,CAAQ,CAACjB,cAA/B,CAAsD,CAClDA,CAAc,CAACuB,IAAf,CAAoBN,CAAQ,CAACjB,cAA7B,CACH,CACD,GAAIC,CAAAA,CAAc,CAAGf,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,sCAAb,CAArB,CACA,GAAIlB,CAAc,EAAgC,EAA5B,GAAAgB,CAAQ,CAAChB,cAA/B,CAAsD,CAClDA,CAAc,CAACsB,IAAf,CAAoBN,CAAQ,CAAChB,cAA7B,CACH,CACJ,CACJ,CA3BD,CA4BH,CAnCD,CAoCH,CArCD,EAqCGuB,IArCH,CAqCQpC,CAAY,CAACqC,SArCrB,CAsCH,CA9EyE,CAgF1E/B,CAAa,CAACgC,SAAd,CAAwB/B,cAAxB,CAAyC,UAAW,CAChDT,CAAC,CAAC,cAAD,CAAD,CAAkByC,KAAlB,CAAwB,SAASC,CAAT,CAAY,CAChCA,CAAC,CAACC,cAAF,GADgC,GAG5BC,CAAAA,CAAG,CAAG5C,CAAC,CAAC,IAAD,CAAD,CAAQ6C,OAAR,CAAgB,gCAAhB,CAHsB,CAI5Bb,CAAO,CAAGY,CAAG,CAACX,IAAJ,CAAS,OAAT,CAJkB,CAOhCjC,CAAC,CAACU,IAAF,CAAOsB,CAAP,CAAgB,UAAW,CACvB,GAAIhC,CAAC,CAAC,IAAD,CAAD,CAAQ8C,QAAR,CAAiB,eAAjB,CAAJ,CAAuC,CACnC9C,CAAC,CAAC,IAAD,CAAD,CAAQmC,WAAR,CAAoB,eAApB,EACAnC,CAAC,CAAC,IAAD,CAAD,CAAQoC,QAAR,CAAiB,iBAAjB,EAFmC,GAI/BW,CAAAA,CAAK,CAAG/C,CAAC,CAAC,IAAD,CAAD,CAAQgD,IAAR,CAAa,KAAb,CAJuB,CAK/BC,CAAW,CAAGjD,CAAC,CAAC,IAAM+C,CAAP,CALgB,CAMnCE,CAAW,CAACC,UAAZ,CAAuB,SAAvB,CACH,CACJ,CATD,EAYA,GAAIhB,CAAAA,CAAQ,CAAGlC,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,OAAb,CAAf,CACAC,CAAQ,CAACC,WAAT,CAAqB,iBAArB,EACAD,CAAQ,CAACC,WAAT,CAAqB,YAArB,EACAD,CAAQ,CAACE,QAAT,CAAkB,eAAlB,EAGA,GAAIe,CAAAA,CAAK,CAAGnD,CAAC,CAAC,IAAMkC,CAAQ,CAACc,IAAT,CAAc,KAAd,CAAP,CAAb,CACAG,CAAK,CAACH,IAAN,CAAW,SAAX,CAAsB,SAAtB,EACA,GAAIpC,CAAAA,CAAW,CAAGgC,CAAG,CAACjC,IAAJ,CAAS,aAAT,CAAlB,CAKA,GAA+B,EAA3B,GAAAuB,CAAQ,CAACvB,IAAT,CAAc,OAAd,CAAJ,CAAmC,CAC/BJ,CAAS,CAACK,CAAD,CAAT,OAAkC,IACrC,CAFD,IAEO,CACHL,CAAS,CAACK,CAAD,CAAT,OAAkCsB,CAAQ,CAACvB,IAAT,CAAc,OAAd,CACrC,CACJ,CArCD,EAuCAX,CAAC,CAAC,mBAAD,CAAD,CAAuBoD,KAAvB,CAA6B,SAASV,CAAT,CAAY,CACrCA,CAAC,CAACC,cAAF,GAEA,GAAI,CAAC3C,CAAC,CAAC,IAAD,CAAD,CAAQ8C,QAAR,CAAiB,eAAjB,CAAL,CAAwC,CACpC,GAAI9C,CAAC,CAAC,IAAD,CAAD,CAAQ8C,QAAR,CAAiB,iBAAjB,CAAJ,CAAyC,CACrC9C,CAAC,CAAC,IAAD,CAAD,CAAQmC,WAAR,CAAoB,iBAApB,EACAnC,CAAC,CAAC,IAAD,CAAD,CAAQoC,QAAR,CAAiB,YAAjB,CACH,CAHD,IAGO,CACHpC,CAAC,CAAC,IAAD,CAAD,CAAQoC,QAAR,CAAiB,iBAAjB,EACApC,CAAC,CAAC,IAAD,CAAD,CAAQmC,WAAR,CAAoB,YAApB,CACH,CACJ,CACJ,CAZD,EAcAnC,CAAC,CAAC,qBAAD,CAAD,CAAyByC,KAAzB,CAA+B,SAASC,CAAT,CAAY,CACvCA,CAAC,CAACC,cAAF,GAEA,GAAIC,CAAAA,CAAG,CAAG5C,CAAC,CAAC,IAAD,CAAD,CAAQ6C,OAAR,CAAgB,mCAAhB,CAAV,CACAQ,OAAO,CAACC,GAAR,CAAYV,CAAG,CAACP,IAAJ,EAAZ,EAJuC,GAKnCxB,CAAAA,CAAK,CAAGb,CAAC,CAAC,IAAD,CAAD,CAAQiC,IAAR,CAAa,0BAAb,EAAyCtB,IAAzC,CAA8C,OAA9C,CAL2B,CAMnC4C,CAAc,CAAGX,CAAG,CAACX,IAAJ,CAAS,sCAAT,CANkB,CAOvCoB,OAAO,CAACC,GAAR,CAAYC,CAAc,CAAClB,IAAf,EAAZ,EACAkB,CAAc,CAACC,MAAf,CAAsB,WAAa3C,CAAb,CAAqB,YAA3C,CAEH,CAVD,EAYAb,CAAC,CAAC,0BAAD,CAAD,CAA8BoD,KAA9B,CAAoC,SAASV,CAAT,CAAY,CAC5CA,CAAC,CAACC,cAAF,GAEA,GAAI,CAAC3C,CAAC,CAAC,IAAD,CAAD,CAAQ8C,QAAR,CAAiB,eAAjB,CAAL,CAAwC,CACpC,GAAI9C,CAAC,CAAC,IAAD,CAAD,CAAQ8C,QAAR,CAAiB,iBAAjB,CAAJ,CAAyC,CACrC9C,CAAC,CAAC,IAAD,CAAD,CAAQmC,WAAR,CAAoB,iBAApB,EACAnC,CAAC,CAAC,IAAD,CAAD,CAAQoC,QAAR,CAAiB,YAAjB,CACH,CAHD,IAGO,CACHpC,CAAC,CAAC,IAAD,CAAD,CAAQoC,QAAR,CAAiB,iBAAjB,EACApC,CAAC,CAAC,IAAD,CAAD,CAAQmC,WAAR,CAAoB,YAApB,CACH,CACJ,CACJ,CAZD,EAcAnC,CAAC,CAAC,gBAAD,CAAD,CAAoByC,KAApB,CAA0B,UAAW,CACjCgB,CAAa,IAChB,CAFD,EAIAzD,CAAC,CAAC,kBAAD,CAAD,CAAsByC,KAAtB,CAA4B,UAAW,CACnCgB,CAAa,IAChB,CAFD,EAIAzD,CAAC,CAAC,oBAAD,CAAD,CAAwByC,KAAxB,CAA8B,SAASC,CAAT,CAAY,CACtCA,CAAC,CAACC,cAAF,GADsC,GAElCC,CAAAA,CAAG,CAAG5C,CAAC,CAAC,IAAD,CAAD,CAAQ6C,OAAR,CAAgB,gCAAhB,CAF4B,CAGlCa,CAAc,CAAGd,CAAG,CAACX,IAAJ,CAAS,kBAAT,CAHiB,CAItC,GAAGyB,CAAc,CAACZ,QAAf,CAAwB,QAAxB,CAAH,CAAsC,CAClCY,CAAc,CAACvB,WAAf,CAA2B,QAA3B,EACAnC,CAAC,CAAC,IAAD,CAAD,CAAQqC,IAAR,CAAa,QAAb,CACH,CAHD,IAGO,CACHqB,CAAc,CAACtB,QAAf,CAAwB,QAAxB,EACApC,CAAC,CAAC,IAAD,CAAD,CAAQqC,IAAR,CAAa,GAAb,CACH,CAEJ,CAZD,CAaH,CArGD,CA4GA,QAASoB,CAAAA,CAAT,CAAuBE,CAAvB,CAAiC,CAE7B3D,CAAC,CAAC,kBAAD,CAAD,CAAsBU,IAAtB,CAA2B,UAAW,IAC9BkC,CAAAA,CAAG,CAAG5C,CAAC,CAAC,IAAD,CAAD,CAAQ6C,OAAR,CAAgB,gCAAhB,CADwB,CAE9Be,CAAO,CAAGhB,CAAG,CAACX,IAAJ,CAAS,sCAAT,EAAiDI,IAAjD,EAFoB,CAGlCuB,CAAO,CAAe,qDAAX,EAAAA,CAAO,CAA4D,EAA5D,CAAgEA,CAAlF,CACArD,CAAS,CAACqC,CAAG,CAACjC,IAAJ,CAAS,aAAT,CAAD,CAAT,gBAAuDiD,CAC1D,CALD,EAMA5D,CAAC,CAAC,kBAAD,CAAD,CAAsBU,IAAtB,CAA2B,UAAW,IAC9BkC,CAAAA,CAAG,CAAG5C,CAAC,CAAC,IAAD,CAAD,CAAQ6C,OAAR,CAAgB,gCAAhB,CADwB,CAE9Be,CAAO,CAAGhB,CAAG,CAACX,IAAJ,CAAS,sCAAT,EAAiDI,IAAjD,EAFoB,CAGlCuB,CAAO,CAAe,qDAAX,EAAAA,CAAO,CAA4D,EAA5D,CAAgEA,CAAlF,CACArD,CAAS,CAACqC,CAAG,CAACjC,IAAJ,CAAS,aAAT,CAAD,CAAT,gBAAuDiD,CAC1D,CALD,EAR6B,GAezB5C,CAAAA,CAAkB,CAAGhB,CAAC,CAAC,iCAAD,CAfG,CAgBzBkB,CAAM,CAAGF,CAAkB,CAACL,IAAnB,CAAwB,UAAxB,CAhBgB,CAiBzBkD,CAAc,CAAG7C,CAAkB,CAACL,IAAnB,CAAwB,YAAxB,CAjBQ,CAkBzBQ,CAAgB,CAAGH,CAAkB,CAACL,IAAnB,CAAwB,kBAAxB,CAlBM,CAmBzBS,CAAY,CAAGJ,CAAkB,CAACL,IAAnB,CAAwB,cAAxB,CAnBU,CAoBzBmD,CAAS,CAAG9C,CAAkB,CAACL,IAAnB,CAAwB,WAAxB,CApBa,CAsB7B,GAAImD,CAAS,EAAIH,CAAjB,CAA2B,CAgBvBvD,CAAG,CAAC2D,WAAJ,CAdqB,CACjB,CACIC,GAAG,CAAE,2BADT,CAEIC,SAAS,CAAE,oBAFf,CADiB,CAKjB,CACID,GAAG,CAAE,kCADT,CAEIC,SAAS,CAAE,oBAFf,CAGIC,KAAK,CAAE,CACH,KAAQL,CADL,CAHX,CALiB,CAcrB,CAAgC,oBAAhC,EAAsDhC,IAAtD,CAA2D,SAASsC,CAAT,CAAmB,CAC1EC,CAAwB,CAACD,CAAQ,CAAC,CAAD,CAAT,CAAcA,CAAQ,CAAC,CAAD,CAAtB,CAA2BhD,CAA3B,CAA6CC,CAA7C,CAA2DF,CAA3D,CAAmEX,CAAnE,CAA8EoD,CAA9E,CAC3B,CAFD,EAEGrB,IAFH,CAEQpC,CAAY,CAACqC,SAFrB,CAGH,CAnBD,IAmBO,CAEH8B,CAAe,CAAClD,CAAD,CAAmBC,CAAnB,CAAiCF,CAAjC,CAAyCX,CAAzC,CAAoDoD,CAApD,CAClB,CACJ,CAWD,QAASU,CAAAA,CAAT,CAAyBlD,CAAzB,CAA2CC,CAA3C,CAAyDF,CAAzD,CAAiEX,CAAjE,CAA4EoD,CAA5E,CAAsF,CAElF,OADIW,CAAAA,CAAe,CAAG,EACtB,OAAoBC,MAAM,CAACC,OAAP,CAAejE,CAAf,CAApB,kBAA+C,0BAA1CyD,GAA0C,MAArCnD,KAAqC,MAC7C,GAAa,IAAV,GAAAA,KAAH,CAAmB,CACjByD,CAAe,CAACG,IAAhB,CAAqB5D,KAArB,CACD,CACF,CAID,GAAIQ,CAAAA,CAAQ,CAAGlB,CAAI,CAACmB,IAAL,CAAU,CACrB,CACIC,UAAU,CAAE,mCADhB,CAEIC,IAAI,CAAE,CACFC,gBAAgB,CAAEN,CADhB,CAEFS,YAAY,CAAER,CAFZ,CAGFO,QAAQ,CAAET,CAHR,CAIFX,SAAS,CAAE+D,CAJT,CAKFI,QAAQ,CAAEf,CALR,CAFV,CADqB,CAAV,CAAf,CAaAtC,CAAQ,CAAC,CAAD,CAAR,CAAYQ,IAAZ,CAAiB,SAASE,CAAT,CAAmB,CAahC3B,CAAG,CAAC2D,WAAJ,CAXmB,CACf,CACIC,GAAG,CAAE,gBADT,CAEIC,SAAS,CAAE,oBAFf,CADe,CAKf,CACID,GAAG,CAAE,yBADT,CAEIC,SAAS,CAAE,oBAFf,CALe,CAWnB,EAAgCpC,IAAhC,CAAqC,SAASsC,CAAT,CAAmB,CACtD,GAAIQ,CAAAA,CAAgB,CAAG,EAAvB,CACE,GAAI5C,CAAQ,CAACD,MAAb,CAAqB,CACjB6C,CAAgB,CAACC,OAAjB,CAA2BT,CAAQ,CAAC,CAAD,CAAnC,CACAQ,CAAgB,CAACE,IAAjB,CAAwB,SAC3B,CAHD,IAGO,CACHF,CAAgB,CAACC,OAAjB,CAA2BT,CAAQ,CAAC,CAAD,CAAnC,CACAQ,CAAgB,CAACE,IAAjB,CAAwB,OAC3B,CACD3E,CAAY,CAAC4E,eAAb,CAA6BH,CAA7B,CACH,CAVD,EAUGrC,IAVH,CAUQpC,CAAY,CAACqC,SAVrB,EAYA,GAAIoB,CAAJ,CAAc,CACVN,OAAO,CAACC,GAAR,CAAY,YAAZ,CACH,CACDyB,MAAM,CAACC,QAAP,CAAkBjD,CAAQ,CAACkD,QAC9B,CA7BD,EA6BG3C,IA7BH,CA6BQpC,CAAY,CAACqC,SA7BrB,CA8BH,CAaD,QAAS6B,CAAAA,CAAT,CAAkCc,CAAlC,CAAyCC,CAAzC,CAA8DhE,CAA9D,CAAgFC,CAAhF,CAA8FF,CAA9F,CAAsGX,CAAtG,CAAiHoD,CAAjH,CAA2H,IACrHyB,CAAAA,CAAwB,CAAGhF,CAAG,CAACiF,UAAJ,CAAe,UAAf,CAA2B,oBAA3B,CAD0F,CAEnHC,CAAmB,CAAGjF,CAAY,CAACkF,MAAb,CAAoB,CAC1CL,KAAK,CAAEA,CADmC,CAE1CM,IAAI,CAAEL,CAFoC,CAG1CM,KAAK,GAHqC,CAI1CZ,IAAI,CAAExE,CAAY,CAACqF,KAAb,CAAmBC,WAJiB,CAApB,CAF6F,CAQvH3F,CAAC,CAAC4F,IAAF,CAAOR,CAAP,CAAiCE,CAAjC,EAAsDzD,IAAtD,CAA2D,SAASgE,CAAT,CAA4BC,CAA5B,CAAmC,CAC1FA,CAAK,CAACC,iBAAN,CAAwBF,CAAxB,EAGAC,CAAK,CAACE,IAAN,GAGAF,CAAK,CAACG,OAAN,GAAgBC,EAAhB,CAAmB5F,CAAW,CAAC6F,MAA/B,CAAuC,UAAW,CAE9CL,CAAK,CAACM,OAAN,CAAc,EAAd,CACH,CAHD,EAKAN,CAAK,CAACG,OAAN,GAAgBC,EAAhB,CAAmB5F,CAAW,CAAC+F,IAA/B,CAAqC,UAAW,CAC5ChC,CAAe,CAAClD,CAAD,CAAmBC,CAAnB,CAAiCF,CAAjC,CAAyCX,CAAzC,CAAoDoD,CAApD,CAClB,CAFD,CAGH,CAfD,CAiBH,CAED,MAAOnD,CAAAA,CACV,CAzVK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD code for the frequently used comments chooser for the marking guide grading form.\n *\n * @module     mod_verbalfeedback/questionnaire\n * @class      view\n * @package    core\n * @copyright  2020 Kevin Tippenhauer <kevin.tippenhauer@bfh.ch>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/templates',\n    'core/notification',\n    'core/ajax',\n    'core/str',\n    'core/modal_factory',\n    'core/modal_events'\n], function($, Templates, Notification, Ajax, Str, ModalFactory, ModalEvents) {\n\n    var responses = [];\n    var questionnaire = function() {\n        this.registerEvents();\n\n        // Prefill responses array.\n        $('[data-region=\"question-row\"]').each(function() {\n            responses[$(this).data('criterionid')] = {\n                criterionid: $(this).data('criterionid'),\n                value: null,\n                studentcomment: \"\",\n                privatecomment: \"\"\n            };\n        });\n\n        let questionnaireTable = $('[data-region=\"questionnaire\"]');\n\n        if(questionnaireTable.data('preview') == true) { // dont use '===' as $preview is '1'  not 'true'.\n          // do not look for existing submission on preview page\n          return;\n        }\n\n        let fromUser = questionnaireTable.data('fromuserid');\n        let toUser = questionnaireTable.data('touserid');\n        let verbalfeedbackId = questionnaireTable.data('verbalfeedbackid');\n        let submissionId = questionnaireTable.data('submissionid');\n\n        let promises = Ajax.call([\n            {\n                methodname: 'mod_verbalfeedback_get_responses',\n                args: {\n                    verbalfeedbackid: verbalfeedbackId,\n                    fromuserid: fromUser,\n                    touserid: toUser,\n                    submissionid: submissionId\n                }\n            }\n        ]);\n\n        promises[0].done(function(result) {\n            $.each(result.responses, function() {\n              let response = this;\n                responses[response.criterionid]['criterionid'] = response.criterionid;\n                responses[response.criterionid]['value'] = response.value;\n                responses[response.criterionid]['studentcomment'] = response.studentcomment;\n                responses[response.criterionid]['privatecomment'] = response.privatecomment;\n\n                $('[data-region=\"question-row\"]').each(function() {\n                    if ($(this).data('criterionid') === response.criterionid) {\n                      let options = $(this).find('.scaleoption');\n                        if (options) {\n                            options.each(function() {\n                                // Mark selected option as selected.\n                                let selected = $(this).find('label');\n                                if (selected.data('value') === response.value) {\n                                    selected.removeClass('badge-secondary');\n                                    selected.removeClass('badge-info');\n                                    selected.addClass('badge-success');\n                                } else if (selected.data('value') === \"\" && response.value === null) {\n                                    selected.removeClass('badge-secondary');\n                                    selected.removeClass('badge-info');\n                                    selected.addClass('badge-success');\n                                }\n                            });\n                        }\n                        let studentcomment = $(this).find('.student-comment.editor_atto_content');\n                        if (studentcomment && response.studentcomment !== '') {\n                            studentcomment.html(response.studentcomment);\n                        }\n                        let privatecomment = $(this).find('.private-comment.editor_atto_content');\n                        if (privatecomment && response.privatecomment !== '') {\n                            privatecomment.html(response.privatecomment);\n                        }\n                    }\n                });\n            });\n        }).fail(Notification.exception);\n    };\n\n    questionnaire.prototype.registerEvents = function() {\n        $('.scaleoption').click(function(e) {\n            e.preventDefault();\n\n            let row = $(this).parents('[data-region=\"question-row\"]');\n            let options = row.find('label');\n\n            // Deselect the option that has been selected.\n            $.each(options, function() {\n                if ($(this).hasClass('badge-success')) {\n                    $(this).removeClass('badge-success');\n                    $(this).addClass('badge-secondary');\n\n                    var forId = $(this).attr('for');\n                    var optionRadio = $(\"#\" + forId);\n                    optionRadio.removeAttr('checked');\n                }\n            });\n\n            // Mark selected option as selected.\n            let selected = $(this).find('label');\n            selected.removeClass('badge-secondary');\n            selected.removeClass('badge-info');\n            selected.addClass('badge-success');\n\n            // Mark hidden radio button as checked.\n            let radio = $(\"#\" + selected.attr('for'));\n            radio.attr('checked', 'checked');\n            let criterionid = row.data('criterionid');\n\n\n\n            // Add this selected value to the array of responses.\n            if (selected.data('value') === \"\") { // === is necessary because == \"0\" equals true;\n                responses[criterionid]['value'] = null;\n            } else {\n                responses[criterionid]['value'] = selected.data('value');\n            }\n        });\n\n        $('.scaleoptionlabel').hover(function(e) {\n            e.preventDefault();\n\n            if (!$(this).hasClass('badge-success')) {\n                if ($(this).hasClass('badge-secondary')) {\n                    $(this).removeClass('badge-secondary');\n                    $(this).addClass('badge-info');\n                } else {\n                    $(this).addClass('badge-secondary');\n                    $(this).removeClass('badge-info');\n                }\n            }\n        });\n\n        $('.detail-scaleoption').click(function(e) {\n            e.preventDefault();\n\n            let row = $(this).parents('[data-region=\"detailed-rating\"]');\n            console.log(row.html());\n            let value = $(this).find('.detail-scaleoptionlabel').data(\"value\");\n            let studentComment = row.find('.student-comment.editor_atto_content');\n            console.log(studentComment.html());\n            studentComment.append(\"<ul><li>\" + value + \"</li></ul>\");\n\n        });\n\n        $('.detail-scaleoptionlabel').hover(function(e) {\n            e.preventDefault();\n\n            if (!$(this).hasClass('badge-success')) {\n                if ($(this).hasClass('badge-secondary')) {\n                    $(this).removeClass('badge-secondary');\n                    $(this).addClass('badge-info');\n                } else {\n                    $(this).addClass('badge-secondary');\n                    $(this).removeClass('badge-info');\n                }\n            }\n        });\n\n        $(\"#save-feedback\").click(function() {\n            saveResponses(false);\n        });\n\n        $(\"#submit-feedback\").click(function() {\n            saveResponses(true);\n        });\n\n        $(\".btn-detail-rating\").click(function(e) {\n            e.preventDefault();\n            let row = $(this).parents('[data-region=\"question-row\"]');\n            let detailedRating = row.find(\".detailed-rating\");\n            if(detailedRating.hasClass(\"hidden\")) {\n                detailedRating.removeClass(\"hidden\");\n                $(this).html(\"−\");\n            } else {\n                detailedRating.addClass(\"hidden\");\n                $(this).html(\"+\");\n            }\n\n        });\n    };\n\n    /**\n     * Save the responses.\n     *\n     * @param {boolean} finalise\n     */\n    function saveResponses(finalise) {\n\n        $('.student-comment').each(function() {\n            let row = $(this).parents('[data-region=\"question-row\"]');\n            let comment = row.find('.student-comment.editor_atto_content').html();\n            comment = (comment == \"<p dir=\\\"ltr\\\" style=\\\"text-align: left;\\\"><br></p>\" ? \"\": comment); // drop empty comments\n            responses[row.data('criterionid')]['studentcomment'] = comment;\n        });\n        $('.private-comment').each(function() {\n            let row = $(this).parents('[data-region=\"question-row\"]');\n            let comment = row.find('.private-comment.editor_atto_content').html();\n            comment = (comment == \"<p dir=\\\"ltr\\\" style=\\\"text-align: left;\\\"><br></p>\" ? \"\": comment); // drop empty comments\n            responses[row.data('criterionid')]['privatecomment'] = comment;\n        });\n\n        let questionnaireTable = $('[data-region=\"questionnaire\"]');\n        let toUser = questionnaireTable.data('touserid');\n        let toUserFullname = questionnaireTable.data('tousername');\n        let verbalfeedbackId = questionnaireTable.data('verbalfeedbackid');\n        let submissionId = questionnaireTable.data('submissionid');\n        let anonymous = questionnaireTable.data('anonymous');\n\n        if (anonymous && finalise) {\n            // Show confirmation dialogue to anonymise the feedback responses.\n            let messageStrings = [\n                {\n                    key: 'finaliseanonymousfeedback',\n                    component: 'mod_verbalfeedback'\n                },\n                {\n                    key: 'confirmfinaliseanonymousfeedback',\n                    component: 'mod_verbalfeedback',\n                    param: {\n                        'name': toUserFullname\n                    }\n                }\n            ];\n\n            Str.get_strings(messageStrings, 'mod_verbalfeedback').done(function(messages) {\n                showConfirmationDialogue(messages[0], messages[1], verbalfeedbackId, submissionId, toUser, responses, finalise);\n            }).fail(Notification.exception);\n        } else {\n            // Just save the responses.\n            submitResponses(verbalfeedbackId, submissionId, toUser, responses, finalise);\n        }\n    }\n\n    /**\n     * Send the responses to the server.\n     *\n     * @param {number} verbalfeedbackId\n     * @param {number} submissionId\n     * @param {number} toUser\n     * @param {array} responses\n     * @param {boolean} finalise\n     */\n    function submitResponses(verbalfeedbackId, submissionId, toUser, responses, finalise) {\n        let responseObjects = [];\n        for([key, value] of Object.entries(responses)) {\n          if(value !== null) {\n            responseObjects.push(value);\n          }\n        }\n        // console.log(responseObjects);\n\n\n        let promises = Ajax.call([\n            {\n                methodname: 'mod_verbalfeedback_save_responses',\n                args: {\n                    verbalfeedbackid: verbalfeedbackId,\n                    submissionid: submissionId,\n                    touserid: toUser,\n                    responses: responseObjects,\n                    complete: finalise\n                }\n            }\n        ]);\n\n        promises[0].done(function(response) {\n          // console.log(response);\n          let messageStrings = [\n                {\n                    key: 'responsessaved',\n                    component: 'mod_verbalfeedback'\n                },\n                {\n                    key: 'errorresponsesavefailed',\n                    component: 'mod_verbalfeedback'\n                }\n            ];\n\n            Str.get_strings(messageStrings).done(function(messages) {\n              let notificationData = {};\n                if (response.result) {\n                    notificationData.message = messages[0];\n                    notificationData.type = \"success\";\n                } else {\n                    notificationData.message = messages[1];\n                    notificationData.type = \"error\";\n                }\n                Notification.addNotification(notificationData);\n            }).fail(Notification.exception);\n\n            if (finalise) {\n                console.log(\"finalizing\");\n            }\n            window.location = response.redirurl;\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Renders the confirmation dialogue to submit and finalise the responses.\n     *\n     * @param {string} title\n     * @param {string} confirmationMessage\n     * @param {number} verbalfeedbackId\n     * @param {number} submissionId\n     * @param {number} toUser\n     * @param {Array} responses\n     * @param {boolean} finalise\n     */\n    function showConfirmationDialogue(title, confirmationMessage, verbalfeedbackId, submissionId, toUser, responses, finalise) {\n      let confirmButtonTextPromise = Str.get_string('finalise', 'mod_verbalfeedback');\n        let confirmModalPromise = ModalFactory.create({\n            title: title,\n            body: confirmationMessage,\n            large: true,\n            type: ModalFactory.types.SAVE_CANCEL\n        });\n        $.when(confirmButtonTextPromise, confirmModalPromise).done(function(confirmButtonText, modal) {\n            modal.setSaveButtonText(confirmButtonText);\n\n            // Display the dialogue.\n            modal.show();\n\n            // On hide handler.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Empty modal contents when it's hidden.\n                modal.setBody('');\n            });\n\n            modal.getRoot().on(ModalEvents.save, function() {\n                submitResponses(verbalfeedbackId, submissionId, toUser, responses, finalise);\n            });\n        });\n\n    }\n\n    return questionnaire;\n});\n"],"file":"questionnaire.min.js"}